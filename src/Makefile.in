# Makefile.in generated by automake 1.9.6 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 406248 $ 
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
bin_PROGRAMS = basket$(EXEEXT)
subdir = src
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(shelldesktopdir)" \
	"$(DESTDIR)$(shellrcdir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_basket_OBJECTS = basket.$(OBJEXT) basketproperties.$(OBJEXT) \
	container.$(OBJEXT) debugwindow.$(OBJEXT) linklabel.$(OBJEXT) \
	variouswidgets.$(OBJEXT) main.$(OBJEXT) xmlwork.$(OBJEXT) \
	keyboard.$(OBJEXT) global.$(OBJEXT) settings.$(OBJEXT) \
	focusedwidgets.$(OBJEXT) popupmenu.$(OBJEXT) \
	basketfactory.$(OBJEXT) kdirwatch.$(OBJEXT) \
	exporterdialog.$(OBJEXT) tag.$(OBJEXT) qeffects.$(OBJEXT) \
	kcolorcombo2.$(OBJEXT) newbasketdialog.$(OBJEXT) \
	tagsedit.$(OBJEXT) formatimporter.$(OBJEXT) note.$(OBJEXT) \
	notecontent.$(OBJEXT) notedrag.$(OBJEXT) noteedit.$(OBJEXT) \
	notefactory.$(OBJEXT) filter.$(OBJEXT) tools.$(OBJEXT) \
	backgroundmanager.$(OBJEXT) regiongrabber.$(OBJEXT) \
	softwareimporters.$(OBJEXT) kicondialog.$(OBJEXT) \
	kiconcanvas.$(OBJEXT)
#>- basket_OBJECTS = $(am_basket_OBJECTS)
#>+ 17
basket_final_OBJECTS = basket.all_cpp.o 
basket_nofinal_OBJECTS = basket.$(OBJEXT) basketproperties.$(OBJEXT) \
	container.$(OBJEXT) debugwindow.$(OBJEXT) linklabel.$(OBJEXT) \
	variouswidgets.$(OBJEXT) main.$(OBJEXT) xmlwork.$(OBJEXT) \
	keyboard.$(OBJEXT) global.$(OBJEXT) settings.$(OBJEXT) \
	focusedwidgets.$(OBJEXT) popupmenu.$(OBJEXT) \
	basketfactory.$(OBJEXT) kdirwatch.$(OBJEXT) \
	exporterdialog.$(OBJEXT) tag.$(OBJEXT) qeffects.$(OBJEXT) \
	kcolorcombo2.$(OBJEXT) newbasketdialog.$(OBJEXT) \
	tagsedit.$(OBJEXT) formatimporter.$(OBJEXT) note.$(OBJEXT) \
	notecontent.$(OBJEXT) notedrag.$(OBJEXT) noteedit.$(OBJEXT) \
	notefactory.$(OBJEXT) filter.$(OBJEXT) tools.$(OBJEXT) \
	backgroundmanager.$(OBJEXT) regiongrabber.$(OBJEXT) \
	softwareimporters.$(OBJEXT) kicondialog.$(OBJEXT) \
	kiconcanvas.$(OBJEXT) kicondialogui.$(OBJEXT)
@KDE_USE_FINAL_FALSE@basket_OBJECTS = $(basket_nofinal_OBJECTS)
@KDE_USE_FINAL_TRUE@basket_OBJECTS = $(basket_final_OBJECTS)
am__DEPENDENCIES_1 =
basket_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
#>- 	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
#>- 	$(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
#>- 	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
#>+ 2
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(KDE_CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(basket_SOURCES)
DIST_SOURCES = $(basket_SOURCES)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
shelldesktopDATA_INSTALL = $(INSTALL_DATA)
shellrcDATA_INSTALL = $(INSTALL_DATA)
DATA = $(shelldesktop_DATA) $(shellrc_DATA)
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
ARTSCCONFIG = @ARTSCCONFIG@
AUTOCONF = @AUTOCONF@
AUTODIRS = @AUTODIRS@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CONF_FILES = @CONF_FILES@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DCOPIDL = @DCOPIDL@
DCOPIDL2CPP = @DCOPIDL2CPP@
DCOPIDLNG = @DCOPIDLNG@
DCOP_DEPENDENCIES = @DCOP_DEPENDENCIES@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_PERMISSIVE_FLAG = @ENABLE_PERMISSIVE_FLAG@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
FRAMEWORK_COREAUDIO = @FRAMEWORK_COREAUDIO@
GMSGFMT = @GMSGFMT@
HAVE_GCC_VISIBILITY = @HAVE_GCC_VISIBILITY@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
KCFG_DEPENDENCIES = @KCFG_DEPENDENCIES@
KCONFIG_COMPILER = @KCONFIG_COMPILER@
KDECONFIG = @KDECONFIG@
KDE_EXTRA_RPATH = @KDE_EXTRA_RPATH@
KDE_INCLUDES = @KDE_INCLUDES@
KDE_LDFLAGS = @KDE_LDFLAGS@
KDE_MT_LDFLAGS = @KDE_MT_LDFLAGS@
KDE_MT_LIBS = @KDE_MT_LIBS@
KDE_NO_UNDEFINED = @KDE_NO_UNDEFINED@
KDE_PLUGIN = @KDE_PLUGIN@
KDE_RPATH = @KDE_RPATH@
KDE_USE_CLOSURE_FALSE = @KDE_USE_CLOSURE_FALSE@
KDE_USE_CLOSURE_TRUE = @KDE_USE_CLOSURE_TRUE@
KDE_USE_FINAL_FALSE = @KDE_USE_FINAL_FALSE@
KDE_USE_FINAL_TRUE = @KDE_USE_FINAL_TRUE@
KDE_USE_NMCHECK_FALSE = @KDE_USE_NMCHECK_FALSE@
KDE_USE_NMCHECK_TRUE = @KDE_USE_NMCHECK_TRUE@
KDE_XSL_STYLESHEET = @KDE_XSL_STYLESHEET@
LDFLAGS = @LDFLAGS@
LDFLAGS_AS_NEEDED = @LDFLAGS_AS_NEEDED@
LDFLAGS_NEW_DTAGS = @LDFLAGS_NEW_DTAGS@
LIBCOMPAT = @LIBCOMPAT@
LIBCRYPT = @LIBCRYPT@
LIBDL = @LIBDL@
LIBJPEG = @LIBJPEG@
LIBOBJS = @LIBOBJS@
LIBPNG = @LIBPNG@
LIBPTHREAD = @LIBPTHREAD@
LIBRESOLV = @LIBRESOLV@
LIBS = @LIBS@
LIBSM = @LIBSM@
LIBSOCKET = @LIBSOCKET@
LIBTOOL = @LIBTOOL@
LIBUCB = @LIBUCB@
LIBUTIL = @LIBUTIL@
LIBZ = @LIBZ@
LIB_ARTSKDE = @LIB_ARTSKDE@
LIB_KAB = @LIB_KAB@
LIB_KABC = @LIB_KABC@
LIB_KDECORE = @LIB_KDECORE@
LIB_KDEPIM = @LIB_KDEPIM@
LIB_KDEPRINT = @LIB_KDEPRINT@
LIB_KDEUI = @LIB_KDEUI@
LIB_KDNSSD = @LIB_KDNSSD@
LIB_KFILE = @LIB_KFILE@
LIB_KFM = @LIB_KFM@
LIB_KHTML = @LIB_KHTML@
LIB_KIMPROXY = @LIB_KIMPROXY@
LIB_KIO = @LIB_KIO@
LIB_KJS = @LIB_KJS@
LIB_KNEWSTUFF = @LIB_KNEWSTUFF@
LIB_KPARTS = @LIB_KPARTS@
LIB_KSPELL = @LIB_KSPELL@
LIB_KSYCOCA = @LIB_KSYCOCA@
LIB_KUNITTEST = @LIB_KUNITTEST@
LIB_KUTILS = @LIB_KUTILS@
LIB_POLL = @LIB_POLL@
LIB_QPE = @LIB_QPE@
LIB_QT = @LIB_QT@
LIB_SMB = @LIB_SMB@
LIB_X11 = @LIB_X11@
LIB_XEXT = @LIB_XEXT@
LIB_XRENDER = @LIB_XRENDER@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MAKEKDEWIDGETS = @MAKEKDEWIDGETS@
MCOPIDL = @MCOPIDL@
MEINPROC = @MEINPROC@
MOC = @MOC@
MSGFMT = @MSGFMT@
NOOPT_CFLAGS = @NOOPT_CFLAGS@
NOOPT_CXXFLAGS = @NOOPT_CXXFLAGS@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
QTE_NORTTI = @QTE_NORTTI@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TOPSUBDIRS = @TOPSUBDIRS@
UIC = @UIC@
UIC_TR = @UIC_TR@
USER_INCLUDES = @USER_INCLUDES@
USER_LDFLAGS = @USER_LDFLAGS@
USE_EXCEPTIONS = @USE_EXCEPTIONS@
USE_RTTI = @USE_RTTI@
USE_THREADS = @USE_THREADS@
VERSION = @VERSION@
WOVERLOADED_VIRTUAL = @WOVERLOADED_VIRTUAL@
XGETTEXT = @XGETTEXT@
XMLLINT = @XMLLINT@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_INCLUDES = @X_INCLUDES@
X_LDFLAGS = @X_LDFLAGS@
X_PRE_LIBS = @X_PRE_LIBS@
X_RPATH = @X_RPATH@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
all_includes = @all_includes@
all_libraries = @all_libraries@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
include_ARTS_FALSE = @include_ARTS_FALSE@
include_ARTS_TRUE = @include_ARTS_TRUE@
include_x11_FALSE = @include_x11_FALSE@
include_x11_TRUE = @include_x11_TRUE@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
kde_appsdir = @kde_appsdir@
kde_bindir = @kde_bindir@
kde_confdir = @kde_confdir@
kde_datadir = @kde_datadir@
kde_htmldir = @kde_htmldir@
kde_icondir = @kde_icondir@
kde_includes = @kde_includes@
kde_kcfgdir = @kde_kcfgdir@
kde_libraries = @kde_libraries@
kde_libs_htmldir = @kde_libs_htmldir@
kde_libs_prefix = @kde_libs_prefix@
kde_locale = @kde_locale@
kde_mimedir = @kde_mimedir@
kde_moduledir = @kde_moduledir@
kde_qtver = @kde_qtver@
kde_servicesdir = @kde_servicesdir@
kde_servicetypesdir = @kde_servicetypesdir@
kde_sounddir = @kde_sounddir@
kde_styledir = @kde_styledir@
kde_templatesdir = @kde_templatesdir@
kde_wallpaperdir = @kde_wallpaperdir@
kde_widgetdir = @kde_widgetdir@
kdeinitdir = @kdeinitdir@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
unsermake_enable_pch_FALSE = @unsermake_enable_pch_FALSE@
unsermake_enable_pch_TRUE = @unsermake_enable_pch_TRUE@
x_includes = @x_includes@
x_libraries = @x_libraries@
xdg_appsdir = @xdg_appsdir@
xdg_directorydir = @xdg_directorydir@
xdg_menudir = @xdg_menudir@

# set the include path for X, qt and KDE
INCLUDES = $(all_includes)

# these are the headers for your project

# let automoc handle all of the meta source files (moc)
#>- METASOURCES = AUTO
KDE_ICON = basket

# the application source, library search path, and link libraries
basket_LDFLAGS = $(KDE_RPATH) $(all_libraries)
basket_LDADD = $(LIB_ARTSKDE) -lkio $(LIB_KDEUI) $(LIB_KDECORE) $(LIB_QT) $(LIBSOCKET)

# this is where the desktop file will go
shelldesktopdir = $(kde_appsdir)/Utilities
shelldesktop_DATA = basket.desktop

# this is where the shell's XML-GUI resource file goes
shellrcdir = $(kde_datadir)/basket
shellrc_DATA = basketui.rc
noinst_HEADERS = basket.h basketproperties.h container.h debugwindow.h \
				linklabel.h variouswidgets.h xmlwork.h keyboard.h global.h settings.h \
				focusedwidgets.h popupmenu.h basketfactory.h kdirwatch.h kdirwatch_p.h exporterdialog.h \
				have_fam.h tag.h qeffects.h kcolorcombo2.h newbasketdialog.h tagsedit.h \
				formatimporter.h note.h notecontent.h notedrag.h noteedit.h notefactory.h filter.h \
				tools.h backgroundmanager.h regiongrabber.h softwareimporters.h kicondialog.h \
	kiconcanvas.h

#>- basket_SOURCES = basket.cpp basketproperties.cpp container.cpp debugwindow.cpp \
#>- 				linklabel.cpp variouswidgets.cpp main.cpp xmlwork.cpp keyboard.cpp global.cpp \
#>- 				settings.cpp focusedwidgets.cpp popupmenu.cpp basketfactory.cpp kdirwatch.cpp \
#>- 				exporterdialog.cpp tag.cpp qeffects.cpp kcolorcombo2.cpp newbasketdialog.cpp tagsedit.cpp \
#>- 				formatimporter.cpp note.cpp notecontent.cpp notedrag.cpp noteedit.cpp notefactory.cpp \
#>- 				filter.cpp tools.cpp backgroundmanager.cpp regiongrabber.cpp softwareimporters.cpp \
#>- 	kicondialogui.ui kicondialog.cpp kiconcanvas.cpp
#>+ 7
basket_SOURCES=basket.cpp basketproperties.cpp container.cpp debugwindow.cpp \
				linklabel.cpp variouswidgets.cpp main.cpp xmlwork.cpp keyboard.cpp global.cpp \
				settings.cpp focusedwidgets.cpp popupmenu.cpp basketfactory.cpp kdirwatch.cpp \
				exporterdialog.cpp tag.cpp qeffects.cpp kcolorcombo2.cpp newbasketdialog.cpp tagsedit.cpp \
				formatimporter.cpp note.cpp notecontent.cpp notedrag.cpp noteedit.cpp notefactory.cpp \
				filter.cpp tools.cpp backgroundmanager.cpp regiongrabber.cpp softwareimporters.cpp \
	 kicondialog.cpp kiconcanvas.cpp kicondialogui.cpp

kde_icon_KDEICON = cr128-app-basket.png cr16-app-basket.png cr22-app-basket.png cr32-app-basket.png cr48-app-basket.png cr64-app-basket.png hi16-app-basket_old.png hi32-app-basket_old.png crsc-app-basket.svg
#>- all: all-am
#>+ 1
all: docs-am  all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
#>- 	@for dep in $?; do \
#>- 	  case '$(am__configure_deps)' in \
#>- 	    *$$dep*) \
#>- 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
#>- 		&& exit 0; \
#>- 	      exit 1;; \
#>- 	  esac; \
#>- 	done; \
#>- 	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --gnu  src/Makefile
#>+ 12
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
	cd $(top_srcdir) && perl admin/am_edit src/Makefile.in
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
basket$(EXEEXT): $(basket_OBJECTS) $(basket_DEPENDENCIES) 
	@rm -f basket$(EXEEXT)
	$(CXXLINK) $(basket_LDFLAGS) $(basket_OBJECTS) $(basket_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/backgroundmanager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/basket.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/basketfactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/basketproperties.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/container.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/debugwindow.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/exporterdialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/filter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/focusedwidgets.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/formatimporter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/global.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kcolorcombo2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kdirwatch.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/keyboard.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kiconcanvas.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kicondialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/linklabel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/newbasketdialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/note.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/notecontent.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/notedrag.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/noteedit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/notefactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/popupmenu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qeffects.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/regiongrabber.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/settings.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/softwareimporters.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tag.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tagsedit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tools.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/variouswidgets.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xmlwork.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
install-shelldesktopDATA: $(shelldesktop_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(shelldesktopdir)" || $(mkdir_p) "$(DESTDIR)$(shelldesktopdir)"
	@list='$(shelldesktop_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(shelldesktopDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(shelldesktopdir)/$$f'"; \
	  $(shelldesktopDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(shelldesktopdir)/$$f"; \
	done

uninstall-shelldesktopDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(shelldesktop_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(shelldesktopdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(shelldesktopdir)/$$f"; \
	done
install-shellrcDATA: $(shellrc_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(shellrcdir)" || $(mkdir_p) "$(DESTDIR)$(shellrcdir)"
	@list='$(shellrc_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(shellrcDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(shellrcdir)/$$f'"; \
	  $(shellrcDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(shellrcdir)/$$f"; \
	done

uninstall-shellrcDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(shellrc_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(shellrcdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(shellrcdir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(DATA) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(shelldesktopdir)" "$(DESTDIR)$(shellrcdir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-am
#>+ 1
clean: kde-rpo-clean  clean-am

#>- clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am
#>+ 1
clean-am: clean-metasources clean-ui clean-bcheck clean-final  clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

#>- install-data-am: install-shelldesktopDATA install-shellrcDATA
#>+ 1
install-data-am: install-kde-icons  install-shelldesktopDATA install-shellrcDATA

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

#>- uninstall-am: uninstall-binPROGRAMS uninstall-info-am \
#>- 	uninstall-shelldesktopDATA uninstall-shellrcDATA
#>+ 2
uninstall-am: uninstall-kde-icons  uninstall-binPROGRAMS uninstall-info-am \
	uninstall-shelldesktopDATA uninstall-shellrcDATA

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-shelldesktopDATA install-shellrcDATA install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-info-am uninstall-shelldesktopDATA \
	uninstall-shellrcDATA


messages: rc.cpp
	$(XGETTEXT) *.cpp -o $(podir)/basket.pot
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 3
newbasketdialog.moc: $(srcdir)/newbasketdialog.h
	$(MOC) $(srcdir)/newbasketdialog.h -o newbasketdialog.moc

#>+ 2
mocs: newbasketdialog.moc

#>+ 3
linklabel.moc: $(srcdir)/linklabel.h
	$(MOC) $(srcdir)/linklabel.h -o linklabel.moc

#>+ 2
mocs: linklabel.moc

#>+ 3
debugwindow.moc: $(srcdir)/debugwindow.h
	$(MOC) $(srcdir)/debugwindow.h -o debugwindow.moc

#>+ 2
mocs: debugwindow.moc

#>+ 3
basket.moc: $(srcdir)/basket.h
	$(MOC) $(srcdir)/basket.h -o basket.moc

#>+ 2
mocs: basket.moc

#>+ 3
kiconcanvas.moc: $(srcdir)/kiconcanvas.h
	$(MOC) $(srcdir)/kiconcanvas.h -o kiconcanvas.moc

#>+ 2
mocs: kiconcanvas.moc

#>+ 3
kdirwatch_p.moc: $(srcdir)/kdirwatch_p.h
	$(MOC) $(srcdir)/kdirwatch_p.h -o kdirwatch_p.moc

#>+ 2
mocs: kdirwatch_p.moc

#>+ 3
kicondialog.moc: $(srcdir)/kicondialog.h
	$(MOC) $(srcdir)/kicondialog.h -o kicondialog.moc

#>+ 2
mocs: kicondialog.moc

#>+ 3
backgroundmanager.moc: $(srcdir)/backgroundmanager.h
	$(MOC) $(srcdir)/backgroundmanager.h -o backgroundmanager.moc

#>+ 2
mocs: backgroundmanager.moc

#>+ 3
kcolorcombo2.moc: $(srcdir)/kcolorcombo2.h
	$(MOC) $(srcdir)/kcolorcombo2.h -o kcolorcombo2.moc

#>+ 2
mocs: kcolorcombo2.moc

#>+ 3
exporterdialog.moc: $(srcdir)/exporterdialog.h
	$(MOC) $(srcdir)/exporterdialog.h -o exporterdialog.moc

#>+ 2
mocs: exporterdialog.moc

#>+ 3
formatimporter.moc: $(srcdir)/formatimporter.h
	$(MOC) $(srcdir)/formatimporter.h -o formatimporter.moc

#>+ 2
mocs: formatimporter.moc

#>+ 3
kdirwatch.moc: $(srcdir)/kdirwatch.h
	$(MOC) $(srcdir)/kdirwatch.h -o kdirwatch.moc

#>+ 2
mocs: kdirwatch.moc

#>+ 3
qeffects.moc: $(srcdir)/qeffects.h
	$(MOC) $(srcdir)/qeffects.h -o qeffects.moc

#>+ 2
mocs: qeffects.moc

#>+ 3
variouswidgets.moc: $(srcdir)/variouswidgets.h
	$(MOC) $(srcdir)/variouswidgets.h -o variouswidgets.moc

#>+ 2
mocs: variouswidgets.moc

#>+ 3
basketproperties.moc: $(srcdir)/basketproperties.h
	$(MOC) $(srcdir)/basketproperties.h -o basketproperties.moc

#>+ 2
mocs: basketproperties.moc

#>+ 3
notecontent.moc: $(srcdir)/notecontent.h
	$(MOC) $(srcdir)/notecontent.h -o notecontent.moc

#>+ 2
mocs: notecontent.moc

#>+ 3
noteedit.moc: $(srcdir)/noteedit.h
	$(MOC) $(srcdir)/noteedit.h -o noteedit.moc

#>+ 2
mocs: noteedit.moc

#>+ 3
filter.moc: $(srcdir)/filter.h
	$(MOC) $(srcdir)/filter.h -o filter.moc

#>+ 2
mocs: filter.moc

#>+ 3
tagsedit.moc: $(srcdir)/tagsedit.h
	$(MOC) $(srcdir)/tagsedit.h -o tagsedit.moc

#>+ 2
mocs: tagsedit.moc

#>+ 3
container.moc: $(srcdir)/container.h
	$(MOC) $(srcdir)/container.h -o container.moc

#>+ 2
mocs: container.moc

#>+ 3
settings.moc: $(srcdir)/settings.h
	$(MOC) $(srcdir)/settings.h -o settings.moc

#>+ 2
mocs: settings.moc

#>+ 3
regiongrabber.moc: $(srcdir)/regiongrabber.h
	$(MOC) $(srcdir)/regiongrabber.h -o regiongrabber.moc

#>+ 2
mocs: regiongrabber.moc

#>+ 3
focusedwidgets.moc: $(srcdir)/focusedwidgets.h
	$(MOC) $(srcdir)/focusedwidgets.h -o focusedwidgets.moc

#>+ 2
mocs: focusedwidgets.moc

#>+ 3
notedrag.moc: $(srcdir)/notedrag.h
	$(MOC) $(srcdir)/notedrag.h -o notedrag.moc

#>+ 2
mocs: notedrag.moc

#>+ 3
clean-metasources:
	-rm -f  newbasketdialog.moc linklabel.moc debugwindow.moc basket.moc kiconcanvas.moc kdirwatch_p.moc kicondialog.moc backgroundmanager.moc kcolorcombo2.moc exporterdialog.moc formatimporter.moc kdirwatch.moc qeffects.moc variouswidgets.moc basketproperties.moc notecontent.moc noteedit.moc filter.moc tagsedit.moc container.moc settings.moc regiongrabber.moc focusedwidgets.moc notedrag.moc

#>+ 2
KDE_DIST=cr22-app-basket.png cr32-app-basket.png cr128-app-basket.png cr16-app-basket.png cr64-app-basket.png kicondialogui.ui basket.desktop basketui.rc crsc-app-basket.svg Makefile.in basket.lsm cr48-app-basket.png Makefile.am 

#>+ 4
clean-ui:
	-rm -f \
	kicondialogui.cpp kicondialogui.h kicondialogui.moc 

#>+ 2
docs-am:

#>+ 25
install-kde-icons:
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/crystalsvg/128x128/apps
	$(INSTALL_DATA) $(srcdir)/cr128-app-basket.png $(DESTDIR)$(kde_icondir)/crystalsvg/128x128/apps/basket.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/crystalsvg/64x64/apps
	$(INSTALL_DATA) $(srcdir)/cr64-app-basket.png $(DESTDIR)$(kde_icondir)/crystalsvg/64x64/apps/basket.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/crystalsvg/scalable/apps
	$(INSTALL_DATA) $(srcdir)/crsc-app-basket.svg $(DESTDIR)$(kde_icondir)/crystalsvg/scalable/apps/basket.svg
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/crystalsvg/16x16/apps
	$(INSTALL_DATA) $(srcdir)/cr16-app-basket.png $(DESTDIR)$(kde_icondir)/crystalsvg/16x16/apps/basket.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/crystalsvg/48x48/apps
	$(INSTALL_DATA) $(srcdir)/cr48-app-basket.png $(DESTDIR)$(kde_icondir)/crystalsvg/48x48/apps/basket.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/crystalsvg/22x22/apps
	$(INSTALL_DATA) $(srcdir)/cr22-app-basket.png $(DESTDIR)$(kde_icondir)/crystalsvg/22x22/apps/basket.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/crystalsvg/32x32/apps
	$(INSTALL_DATA) $(srcdir)/cr32-app-basket.png $(DESTDIR)$(kde_icondir)/crystalsvg/32x32/apps/basket.png

uninstall-kde-icons:
	-rm -f $(DESTDIR)$(kde_icondir)/crystalsvg/128x128/apps/basket.png
	-rm -f $(DESTDIR)$(kde_icondir)/crystalsvg/64x64/apps/basket.png
	-rm -f $(DESTDIR)$(kde_icondir)/crystalsvg/scalable/apps/basket.svg
	-rm -f $(DESTDIR)$(kde_icondir)/crystalsvg/16x16/apps/basket.png
	-rm -f $(DESTDIR)$(kde_icondir)/crystalsvg/48x48/apps/basket.png
	-rm -f $(DESTDIR)$(kde_icondir)/crystalsvg/22x22/apps/basket.png
	-rm -f $(DESTDIR)$(kde_icondir)/crystalsvg/32x32/apps/basket.png

#>+ 15
force-reedit:
		@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
	cd $(top_srcdir) && perl admin/am_edit src/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-am

bcheck-am:
	@for i in ; do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy -c $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 11
basket.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/basket.cpp $(srcdir)/basketproperties.cpp $(srcdir)/container.cpp $(srcdir)/debugwindow.cpp $(srcdir)/linklabel.cpp $(srcdir)/variouswidgets.cpp $(srcdir)/main.cpp $(srcdir)/xmlwork.cpp $(srcdir)/keyboard.cpp $(srcdir)/global.cpp $(srcdir)/settings.cpp $(srcdir)/focusedwidgets.cpp $(srcdir)/popupmenu.cpp $(srcdir)/basketfactory.cpp $(srcdir)/kdirwatch.cpp $(srcdir)/exporterdialog.cpp $(srcdir)/tag.cpp $(srcdir)/qeffects.cpp $(srcdir)/kcolorcombo2.cpp $(srcdir)/newbasketdialog.cpp $(srcdir)/tagsedit.cpp $(srcdir)/formatimporter.cpp $(srcdir)/note.cpp $(srcdir)/notecontent.cpp $(srcdir)/notedrag.cpp $(srcdir)/noteedit.cpp $(srcdir)/notefactory.cpp $(srcdir)/filter.cpp $(srcdir)/tools.cpp $(srcdir)/backgroundmanager.cpp $(srcdir)/regiongrabber.cpp $(srcdir)/softwareimporters.cpp $(srcdir)/kicondialog.cpp $(srcdir)/kiconcanvas.cpp kicondialogui.cpp  linklabel.moc newbasketdialog.moc basket.moc debugwindow.moc kicondialogui.moc kiconcanvas.moc kdirwatch_p.moc backgroundmanager.moc kicondialog.moc kcolorcombo2.moc exporterdialog.moc formatimporter.moc kdirwatch.moc qeffects.moc variouswidgets.moc basketproperties.moc notecontent.moc filter.moc noteedit.moc tagsedit.moc container.moc settings.moc regiongrabber.moc focusedwidgets.moc notedrag.moc
	@echo 'creating basket.all_cpp.cpp ...'; \
	rm -f basket.all_cpp.files basket.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> basket.all_cpp.final; \
	for file in basket.cpp basketproperties.cpp container.cpp debugwindow.cpp linklabel.cpp variouswidgets.cpp main.cpp xmlwork.cpp keyboard.cpp global.cpp settings.cpp focusedwidgets.cpp popupmenu.cpp basketfactory.cpp kdirwatch.cpp exporterdialog.cpp tag.cpp qeffects.cpp kcolorcombo2.cpp newbasketdialog.cpp tagsedit.cpp formatimporter.cpp note.cpp notecontent.cpp notedrag.cpp noteedit.cpp notefactory.cpp filter.cpp tools.cpp backgroundmanager.cpp regiongrabber.cpp softwareimporters.cpp kicondialog.cpp kiconcanvas.cpp kicondialogui.cpp ; do \
	  echo "#include \"$$file\"" >> basket.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> basket.all_cpp.final; \
	done; \
	cat basket.all_cpp.final basket.all_cpp.files > basket.all_cpp.cpp; \
	rm -f basket.all_cpp.final basket.all_cpp.files

#>+ 3
clean-final:
	-rm -f basket.all_cpp.cpp

#>+ 3
final:
	$(MAKE) basket_OBJECTS="$(basket_final_OBJECTS)" all-am

#>+ 3
final-install:
	$(MAKE) basket_OBJECTS="$(basket_final_OBJECTS)" install-am

#>+ 3
no-final:
	$(MAKE) basket_OBJECTS="$(basket_nofinal_OBJECTS)" all-am

#>+ 3
no-final-install:
	$(MAKE) basket_OBJECTS="$(basket_nofinal_OBJECTS)" install-am

#>+ 3
cvs-clean:
	$(MAKE) admindir=$(top_srcdir)/admin -f $(top_srcdir)/admin/Makefile.common cvs-clean

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 83
$(srcdir)/main.cpp: kicondialogui.h 
regiongrabber.o: regiongrabber.moc 
kicondialog.lo: kicondialog.moc 
kicondialog.o: kicondialog.moc 
$(srcdir)/filter.cpp: kicondialogui.h 
$(srcdir)/noteedit.cpp: kicondialogui.h 
container.lo: container.moc 
variouswidgets.o: variouswidgets.moc 
linklabel.lo: linklabel.moc 
nmcheck-am: nmcheck
$(srcdir)/xmlwork.cpp: kicondialogui.h 
$(srcdir)/tools.cpp: kicondialogui.h 
basket.lo: basket.moc 
$(srcdir)/basket.cpp: kicondialogui.h 
$(srcdir)/qeffects.cpp: kicondialogui.h 
newbasketdialog.o: newbasketdialog.moc 
kdirwatch.lo: kdirwatch_p.moc kdirwatch.moc 
settings.lo: settings.moc 
debugwindow.o: debugwindow.moc 
$(srcdir)/container.cpp: kicondialogui.h 
filter.o: filter.moc 
debugwindow.lo: debugwindow.moc 
linklabel.o: linklabel.moc 
formatimporter.lo: formatimporter.moc 
focusedwidgets.o: focusedwidgets.moc 
kiconcanvas.lo: kiconcanvas.moc 
backgroundmanager.lo: backgroundmanager.moc 
$(srcdir)/variouswidgets.cpp: kicondialogui.h 
$(srcdir)/focusedwidgets.cpp: kicondialogui.h 
$(srcdir)/kicondialog.cpp: kicondialogui.h 
$(srcdir)/popupmenu.cpp: kicondialogui.h 
kiconcanvas.o: kiconcanvas.moc 
kdirwatch.o: kdirwatch_p.moc kdirwatch.moc 
$(srcdir)/notedrag.cpp: kicondialogui.h 
$(srcdir)/linklabel.cpp: kicondialogui.h 
notecontent.lo: notecontent.moc 
$(srcdir)/note.cpp: kicondialogui.h 
container.o: container.moc 
qeffects.o: qeffects.moc 
basketproperties.lo: basketproperties.moc 
$(srcdir)/notefactory.cpp: kicondialogui.h 
qeffects.lo: qeffects.moc 
$(srcdir)/tag.cpp: kicondialogui.h 
$(srcdir)/regiongrabber.cpp: kicondialogui.h 
$(srcdir)/settings.cpp: kicondialogui.h 
$(srcdir)/basketfactory.cpp: kicondialogui.h 
regiongrabber.lo: regiongrabber.moc 
$(srcdir)/kdirwatch.cpp: kicondialogui.h 
$(srcdir)/debugwindow.cpp: kicondialogui.h 
notedrag.lo: notedrag.moc 
focusedwidgets.lo: focusedwidgets.moc 
settings.o: settings.moc 
$(srcdir)/tagsedit.cpp: kicondialogui.h 
tagsedit.lo: tagsedit.moc 
$(srcdir)/exporterdialog.cpp: kicondialogui.h 
kcolorcombo2.lo: kcolorcombo2.moc 
exporterdialog.lo: exporterdialog.moc 
backgroundmanager.o: backgroundmanager.moc 
basket.o: basket.moc 
$(srcdir)/notecontent.cpp: kicondialogui.h 
exporterdialog.o: exporterdialog.moc 
notedrag.o: notedrag.moc 
filter.lo: filter.moc 
noteedit.o: noteedit.moc 
noteedit.lo: noteedit.moc 
$(srcdir)/basketproperties.cpp: kicondialogui.h 
tagsedit.o: tagsedit.moc 
$(srcdir)/global.cpp: kicondialogui.h 
notecontent.o: notecontent.moc 
formatimporter.o: formatimporter.moc 
nmcheck: 
$(srcdir)/formatimporter.cpp: kicondialogui.h 
$(srcdir)/kcolorcombo2.cpp: kicondialogui.h 
$(srcdir)/keyboard.cpp: kicondialogui.h 
basketproperties.o: basketproperties.moc 
$(srcdir)/kiconcanvas.cpp: kicondialogui.h 
$(srcdir)/newbasketdialog.cpp: kicondialogui.h 
$(srcdir)/backgroundmanager.cpp: kicondialogui.h 
variouswidgets.lo: variouswidgets.moc 
newbasketdialog.lo: newbasketdialog.moc 
kcolorcombo2.o: kcolorcombo2.moc 
$(srcdir)/softwareimporters.cpp: kicondialogui.h 

#>+ 15
kicondialogui.cpp: $(srcdir)/kicondialogui.ui kicondialogui.h kicondialogui.moc
	rm -f kicondialogui.cpp
	echo '#include <kdialog.h>' > kicondialogui.cpp
	echo '#include <klocale.h>' >> kicondialogui.cpp
	$(UIC) -tr ${UIC_TR} -i kicondialogui.h $(srcdir)/kicondialogui.ui > kicondialogui.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" kicondialogui.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_kicondialogui,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> kicondialogui.cpp ;\
	rm -f kicondialogui.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "kicondialogui.moc"' >> kicondialogui.cpp; else rm -f kicondialogui.cpp ; exit $$ret ; fi

kicondialogui.h: $(srcdir)/kicondialogui.ui
	rm -rf kicondialogui.h;
	$(UIC) $(srcdir)/kicondialogui.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> kicondialogui.h ;
kicondialogui.moc: kicondialogui.h
	$(MOC) kicondialogui.h -o kicondialogui.moc
